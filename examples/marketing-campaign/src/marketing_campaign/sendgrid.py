# generated by datamodel-codegen:
#   filename:  /var/folders/f8/qvj2_dq10d1375b7t9fn1_3m0000gn/T/tmpcmy9empi/openapi.yaml
#   timestamp: 2025-03-15T16:25:21+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class InputSchema(BaseModel):
    query: str = Field(
        ...,
        description='A prompt asking to send an email. It specifies the email address of the sender, the email address of the recipient and the content of the email.',
        examples=[
            'Please send an email from master@info.com to xxx@acme.com: The content of the email should be:\n Dear xxx, I am writing to you the say hello. Best Regards. Alessandro\n',
            "Write an email from alessandro@company.com  to the reipient 'someone@company.com' : The content of the email should be:\n Hello someone, How are you? Bye. Frank\n",
        ],
        title='Query',
    )


class OutputSchema(BaseModel):
    result: str = Field(
        ...,
        description='Response from sendgrid describing the result of the operation performed, in this case an email being sent',
        title='Result',
    )


class ConfigSchema(BaseModel):
    test: Optional[bool] = Field(
        False, description='Flag indicating if the agent is in test mode', title='Test'
    )
