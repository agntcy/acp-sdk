name: Publish Python Package

on:
  release:
    types: [created]

env:
  POETRY_VERSION: "2.1.1"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"

jobs:
  pypi-publish:
    name: Publish release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '>=3.9'
          update-environment: true

      - name: Install Poetry
        run: |
          pipx install poetry==${{ env.POETRY_VERSION }}

      - name: Validate version
        run: |
          TAG="${${{ github.ref_name }}##v}" ## Remove the version tag prefix
          PYPROJECT_VERSION=$(awk '/version/ { gsub("\"", ""); print $3; exit; }' pyproject.toml)
      
          if [ ! "${PYPROJECT_VERSION}" = "${TAG}" ]; then
              echo "You created the \"${{ github.ref_name }}\"" git tag; it's fine, BUT it does not match the pyproject.toml file"
              exit 1
          fi

          echo "Building and publishing version: ${PYPROJECT_VERSION}" >> $GITHUB_STEP_SUMMARY

      - name: Build package
        run: |
          poetry build

      - name: Add artifacts to GH release
        run: |
          gh release upload "${{ github.ref_name }}" dist/**

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}