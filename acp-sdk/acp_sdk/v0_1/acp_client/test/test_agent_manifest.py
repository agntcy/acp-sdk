# coding: utf-8

"""
    Agent Connect Protocol

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from acp_client_v0_1.models.agent_manifest import AgentManifest

class TestAgentManifest(unittest.TestCase):
    """AgentManifest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgentManifest:
        """Test AgentManifest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgentManifest`
        """
        model = AgentManifest()
        if include_optional:
            return AgentManifest(
                metadata = acp_client_v0_1.models.agent_metadata.Agent Metadata(
                    ref = acp_client_v0_1.models.agent_manifest_reference.Agent Manifest Reference(
                        name = '', 
                        version = '', 
                        url = '', ), 
                    description = '', ),
                specs = acp_client_v0_1.models.agent_specs.Agent Specs(
                    capabilities = acp_client_v0_1.models.agent_capabilities.Agent Capabilities(
                        threads = True, 
                        interrupts = True, 
                        callbacks = True, 
                        streaming = acp_client_v0_1.models.streaming_modes.Streaming Modes(
                            result = True, 
                            custom = True, ), ), 
                    input = acp_client_v0_1.models.input.input(), 
                    output = acp_client_v0_1.models.output.output(), 
                    custom_streaming_update = acp_client_v0_1.models.custom_streaming_update.custom_streaming_update(), 
                    thread_state = acp_client_v0_1.models.thread_state.thread_state(), 
                    config = acp_client_v0_1.models.config.config(), 
                    interrupts = [
                        acp_client_v0_1.models.agent_specs_interrupts_inner.Agent_Specs_interrupts_inner(
                            interrupt_type = '', 
                            interrupt_payload = acp_client_v0_1.models.interrupt_payload.interrupt_payload(), 
                            resume_payload = acp_client_v0_1.models.interrupt_payload.interrupt_payload(), )
                        ], ),
                dependencies = [
                    acp_client_v0_1.models.agent_manifest_reference.Agent Manifest Reference(
                        name = '', 
                        version = '', 
                        url = '', )
                    ],
                deployments = [
                    null
                    ]
            )
        else:
            return AgentManifest(
                metadata = acp_client_v0_1.models.agent_metadata.Agent Metadata(
                    ref = acp_client_v0_1.models.agent_manifest_reference.Agent Manifest Reference(
                        name = '', 
                        version = '', 
                        url = '', ), 
                    description = '', ),
                specs = acp_client_v0_1.models.agent_specs.Agent Specs(
                    capabilities = acp_client_v0_1.models.agent_capabilities.Agent Capabilities(
                        threads = True, 
                        interrupts = True, 
                        callbacks = True, 
                        streaming = acp_client_v0_1.models.streaming_modes.Streaming Modes(
                            result = True, 
                            custom = True, ), ), 
                    input = acp_client_v0_1.models.input.input(), 
                    output = acp_client_v0_1.models.output.output(), 
                    custom_streaming_update = acp_client_v0_1.models.custom_streaming_update.custom_streaming_update(), 
                    thread_state = acp_client_v0_1.models.thread_state.thread_state(), 
                    config = acp_client_v0_1.models.config.config(), 
                    interrupts = [
                        acp_client_v0_1.models.agent_specs_interrupts_inner.Agent_Specs_interrupts_inner(
                            interrupt_type = '', 
                            interrupt_payload = acp_client_v0_1.models.interrupt_payload.interrupt_payload(), 
                            resume_payload = acp_client_v0_1.models.interrupt_payload.interrupt_payload(), )
                        ], ),
        )
        """

    def testAgentManifest(self):
        """Test AgentManifest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
