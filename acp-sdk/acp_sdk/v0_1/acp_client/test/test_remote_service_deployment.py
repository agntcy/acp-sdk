# coding: utf-8

"""
    Agent Connect Protocol

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from acp_client_v0_1.models.remote_service_deployment import RemoteServiceDeployment

class TestRemoteServiceDeployment(unittest.TestCase):
    """RemoteServiceDeployment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RemoteServiceDeployment:
        """Test RemoteServiceDeployment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RemoteServiceDeployment`
        """
        model = RemoteServiceDeployment()
        if include_optional:
            return RemoteServiceDeployment(
                type = 'remote_service',
                protocol = acp_client_v0_1.models.acp_details.ACP Details(
                    type = 'ACP', 
                    url = '', 
                    agent_id = '', 
                    authentication = acp_client_v0_1.models.security_scheme.SecurityScheme(), )
            )
        else:
            return RemoteServiceDeployment(
                type = 'remote_service',
                protocol = acp_client_v0_1.models.acp_details.ACP Details(
                    type = 'ACP', 
                    url = '', 
                    agent_id = '', 
                    authentication = acp_client_v0_1.models.security_scheme.SecurityScheme(), ),
        )
        """

    def testRemoteServiceDeployment(self):
        """Test RemoteServiceDeployment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
